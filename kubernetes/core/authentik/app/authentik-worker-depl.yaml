apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: worker
  name: authentik-worker
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/component: worker
  template:
    metadata:
      labels:
        app.kubernetes.io/component: worker
    spec:
      containers:
        - name: authentik
          args:
            - worker
          env:
            - name: AUTHENTIK_AVATARS
              value: none
            - name: AUTHENTIK_EMAIL__FROM
              value: no-reply.authentik@k8s.l8n.ch
            - name: AUTHENTIK_EMAIL__HOST
              value: 'email-smtp.eu-central-1.amazonaws.com'
            - name: AUTHENTIK_EMAIL__USERNAME
              valueFrom:
                secretKeyRef:
                  name: authentik-credentials
                  key: ses-smtp-username
            - name: AUTHENTIK_EMAIL__PASSWORD
              valueFrom:
                secretKeyRef:
                  name: authentik-credentials
                  key: ses-smtp-password
            - name: AUTHENTIK_EMAIL__PORT
              value: '587'
            - name: AUTHENTIK_EMAIL__TIMEOUT
              value: '30'
            - name: AUTHENTIK_EMAIL__USE_SSL
              value: 'false'
            - name: AUTHENTIK_EMAIL__USE_TLS
              value: 'true'
            - name: AUTHENTIK_ERROR_REPORTING__ENABLED
              value: 'false'
            - name: AUTHENTIK_ERROR_REPORTING__ENVIRONMENT
              value: k8s
            - name: AUTHENTIK_ERROR_REPORTING__SEND_PII
              value: "false"
            - name: AUTHENTIK_GEOIP
              value: /geoip/GeoLite2-City.mmdb
            - name: AUTHENTIK_LOG_LEVEL
              value: info
            - name: AUTHENTIK_OUTPOSTS__CONTAINER_IMAGE_BASE
              value: ghcr.io/goauthentik/%(type)s:%(version)s
            - name: AUTHENTIK_POSTGRESQL__HOST
              value: postgresql-hl.core-postgresql
            - name: AUTHENTIK_POSTGRESQL__NAME
              value: authentik
            - name: AUTHENTIK_POSTGRESQL__USER
              value: authentik
            - name: AUTHENTIK_POSTGRESQL__PASSWORD
              valueFrom:
                secretKeyRef:
                  name: authentik-credentials
                  key: postgres-password
            - name: AUTHENTIK_POSTGRESQL__PORT
              value: "5432"
            - name: AUTHENTIK_REDIS__HOST
              value: authentik-redis
            - name: AUTHENTIK_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: authentik-credentials
                  key: authentik-secret
          image: ghcr.io/goauthentik/server
          resources:
            limits:
              memory: 1Gi
            requests:
              cpu: 50m
              memory: 64Mi
          volumeMounts:
            - mountPath: /geoip
              name: geoip-db
        - name: geoip-sidecar
          env:
            - name: GEOIPUPDATE_FREQUENCY
              value: "8"
            - name: GEOIPUPDATE_PRESERVE_FILE_TIMES
              value: "1"
            - name: GEOIPUPDATE_ACCOUNT_ID
              valueFrom:
                secretKeyRef:
                  name: authentik-credentials
                  key: geoip-account-id
            - name: GEOIPUPDATE_LICENSE_KEY
              valueFrom:
                secretKeyRef:
                  name: authentik-credentials
                  key: geoip-license-key
            - name: GEOIPUPDATE_EDITION_IDS
              value: GeoLite2-City
          image: maxmindinc/geoipupdate:v4.8
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 10m
              memory: 64Mi
          volumeMounts:
            - mountPath: /usr/share/GeoIP
              name: geoip-db
      enableServiceLinks: true
      securityContext: { }
      serviceAccountName: authentik
      volumes:
        - name: geoip-db
          emptyDir: { }
